name: 'action-test'
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - name: Notify deployment start
        uses: ./
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          desc: 'Deploying environment A and environment B'
          env: '["envA", "envB"]'
          debug: true
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - name: Notify deployment deactivation
        uses: ./
        with:
          step: deactivate-env
          token: ${{ secrets.GITHUB_TOKEN }}
          env: '["envA", "envB"]'
          debug: true
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - name: Notify deployment delete
        uses: ./
        with:
          step: delete-env
          token: ${{ secrets.GH_PAT_TOKEN }}
          env: '["envA", "envB"]'
          debug: true
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - name: Notify deployment start
        uses: ./
        id: deployment2
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          desc: 'Deploying environment C and environment D'
          env: '["envC", "envD"]'
          debug: true
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - name: Notify deployment finish
        uses: ./
        with:
          step: finish
          status: 'success'
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.deployment2.outputs.deployment_id }}
          debug: true
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - name: Notify deployment start
        uses: ./
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          desc: 'Deploying environment Z'
          env: envZ
          debug: true
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - name: Notify deployment deactivation
        uses: ./
        with:
          step: deactivate-env
          token: ${{ secrets.GITHUB_TOKEN }}
          env: envZ
          debug: true
      - name: Notify deployment start
        uses: maxgfr/multi-deployments@v1.2.0
        id: deployment3
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          desc: 'Deploying environment X'
          env: '["envX"]'
          debug: true
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - name: Notify deployment finish
        uses: maxgfr/multi-deployments@v1.2.0
        with:
          step: finish
          status: 'success'
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.deployment3.outputs.deployment_id }}
          env_url: '["envX"]'
          debug: true
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'
      - name: Notify deployment delete
        uses: maxgfr/multi-deployments@v1.2.0
        with:
          step: delete-env
          token: ${{ secrets.GH_PAT_TOKEN }}
          env: '["envX"]'
          debug: true

